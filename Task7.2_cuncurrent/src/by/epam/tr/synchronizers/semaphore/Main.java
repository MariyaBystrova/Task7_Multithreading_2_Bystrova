package by.epam.tr.synchronizers.semaphore;

import java.util.concurrent.Semaphore;

/**
 * 
 * @author mariya
 * 	
	Тележка (общий ресурс) и два работника (потоки java). 
	Один работник, наполняет тележку чем-то. 
	В это время второй работник, который перевозит груз и затем разгружает, не может взять тележку и отвезти ее.
	В то же время, если второй работник увез тележку, то первый работник не должен ничего наполнять.
	Семафор используются для того, чтобы в этом случае перед использованием ресурса проверить его доступность.
 *
 */

public class Main {

	public static void main(String[] args) {
		//создание семафора с разрешением только одному потоку использовать shared ресурс
		//при этом второй параметр в конструкторе отсутствует и по умолчанию он - false(разрешение на вход раздается не в порядке очереди)
        Semaphore semaphore = new Semaphore(1);
        new Worker(semaphore, "Adder", true).start();
        new Worker(semaphore, "Reducer", false).start();
    }

}

